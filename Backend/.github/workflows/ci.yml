name: CI Pipeline Backend

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [orders-command, orders-query, returns, notifs]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ matrix.service }}/package-lock.json

    - name: Install dependencies for ${{ matrix.service }}
      run: |
        cd ${{ matrix.service }}
        npm install

    - name: Run tests with coverage for ${{ matrix.service }}
      run: |
        cd ${{ matrix.service }}
        npm run test:cov -- --coverageReporters=lcov

    - name: Upload coverage report for ${{ matrix.service }}
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ matrix.service }}
        path: ${{ matrix.service }}/coverage/lcov.info

    - name: Build ${{ matrix.service }}
      run: |
        cd ${{ matrix.service }}
        npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build & Push Docker images
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USER }}/orders-command:latest ./orders-command
        docker push ${{ secrets.DOCKERHUB_USER }}/orders-command:latest

        docker build -t ${{ secrets.DOCKERHUB_USER }}/orders-query:latest ./orders-query
        docker push ${{ secrets.DOCKERHUB_USER }}/orders-query:latest

        docker build -t ${{ secrets.DOCKERHUB_USER }}/returns:latest ./returns
        docker push ${{ secrets.DOCKERHUB_USER }}/returns:latest

        docker build -t ${{ secrets.DOCKERHUB_USER }}/notifs:latest ./notifs
        docker push ${{ secrets.DOCKERHUB_USER }}/notifs:latest
